#!/usr/local/bin/perl
#
# testpgperl1 
#
# Test general array handling and other pgplot routines
# by plotting some misc. points with error bars, some
# lines and some text. Also test cursor input from user at end.
#

require "pgplot.pl";

print "\n\nTesting advanced point and line plot routines...\n\n";

&pgperlv; 

open(FILE,"testpgperl1.cuv") || die "Data file testpgperl1.cuv not found";

&pgbegin(0,"?",1,1);


&pgqinf("VERSION",$val,$len);
print "PGPLOT $val library\n";


&pgscf(2);
&pgslw(4);
&pgsch(1.6);

&pgenv(10.0,30.0,-2.0,6.0,0,0);

&pgsci(6);

&pglabel("X axis \\gP","Y axis \\gF","Top Label \\gW");

&pgsci(7);

$i=-1;
while(<FILE>){
   $i++;
   ($x[$i], $y[$i]) = split(' ');
}
&pgline($i,*x,*y);

&pgsci(3);

for($i=0; $i<10; $i++) {
   $x[$i] = $i+15;
   $y[$i] = $i-1;
   $e[$i] = 0.9;
   $x1[$i] = $x[$i] - $e[$i];
   $x2[$i] = $x[$i] + 2.0* $e[$i];
   $y1[$i] = $y[$i] - 0.7* $e[$i];
   $y2[$i] = $y[$i] + 0.3* $e[$i];
}


&pgpoint(10,*x,*y,14);
&pgerrx(10,*x1,*x2,*y,1);
&pgerry(10,*x,*y2,*y1,.1);
&pgsci(2);
&pgsah(1,30,0.5);
&pgarro(20,0,25,2);

&pgmtext('B', -2.0, 0.95, 1, "This is a test");

&pgsci(9);

&pgptxt(25,2,35,0,'This way...');

&pgqinf("CURSOR",$ans,$l);
if ($ans eq "YES") {

   print "Entering interactive cursor test...\n";
   
   &pgsci(4);
   
   print "Enter some points with the cursor\n";
   
   &pglcur(5,$n,*xt,*yt);
   &pgsci(9);
   &pgpoint($n,*xt,*yt,20);
   
   for(@xt) { printf "%5.2f ",$_; } print "\n";
   for(@yt) { printf "%5.2f ",$_; } print "\n";
   
   &pgsci(2); 
   &pgpoly($n,*xt,*yt);
}

&pgiden;

&pgend;


