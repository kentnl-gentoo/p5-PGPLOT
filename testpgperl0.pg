#!/usr/local/bin/perl
                          # The first line tells UNIX that the
                          # script uses the pgperl executable
                          # - a directory will usually be needed.
                          # One could also type "pgperl filename"

require "pgplot.pl";      # Include header file - directory may be needed
                          # if PERLLIB is undefined. This statement is 
                          # required at the start of all pgperl scripts.

print "\n\nTesting simple point plot routines...\n\n";

&pgperlv;                 # Print pgperl version

# Open data file, if not found print error and exit

open(FILE,"testpgperl0.dat") || die "Data file testpgperl0.dat not found"; 

&pgbegin(0,"?",1,1);      # Open plot device interactively

&pgscf(2);                # Set character font
&pgslw(4);                # Set line width
&pgsch(1.6);              # Set character height

&pgenv(0,10,-5,5,0,0);    # Define data limits and plot axes

&pglabel("X","Y","Data"); # Labels

&pgsci(5);                # Change colour

while(<FILE>){                    # Read data in 2 columns from file using perl
   ($x[$i], $y[$i]) = split(' '); # and put in two perl arrays
   $i++;
}
&pgpoint($i,*x,*y,17);    # Plot points - note how perl arrays are passed
                          # (see below)

&pgend;                   # Close plot

